version: "2"
services:

  redis:
    image: redis:alpine
    restart: always
    command: ['redis-server', '--requirepass', 'REDIS_PASSWORD']
    networks:
      airflow_network:
        aliases:
          - redis

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    networks:
      airflow_network:
        aliases:
          - postgres

  webserver:
    image: apache/airflow:1.10.10-python3.7
    restart: always
    env_file:
      - .env
    volumes:
      - dags:/opt/airflow/dags:ro
    ports:
     - 127.0.0.1:8080:8080
    command: ["webserver"]
    networks:
      airflow_network:
        aliases:
          - webserver
    depends_on:
      - postgres

  scheduler:
    restart: always
    image: apache/airflow:1.10.10-python3.7
    env_file:
      - .env
    volumes:
      - dags:/opt/airflow/dags:ro
    command: ['scheduler']
    networks:
      airflow_network:
        aliases:
          - scheduler
    depends_on:
      - postgres


  worker:
    restart: always
    image: apache/airflow:1.10.10-python3.7
    env_file:
      - .env
    volumes:
      - dags:/opt/airflow/dags:ro
    command: ['worker']
    networks:
      airflow_network:
        aliases:
          - worker
    depends_on:
      - postgres
      - redis


networks:
  airflow_network: {}
volumes:
  dags:
    driver: local
    driver_opts:
      type: none
      device: $PWD/dags  # change here with any absolute path of your choice
      o: bind,ro
  pgdata: